/*
 * Here comes the text of your license
 * Each line should be prefixed with  * 
 */

package rsm;

import javax.swing.DefaultListModel;

/**
 *
 * @author paul
 */
public class ExhibitorAgesForm extends javax.swing.JFrame implements FormInterface {
    private ExhibitorAgeList exhibitorAgeList = new ExhibitorAgeList();
    private ExhibitorAge curRecord;
    private int selectedRecord;
    private boolean newItem;
    private final DefaultListModel<String> theListModelData = new DefaultListModel<String>();
    /**
     * Creates new form ExhibitorAgesForm
     */
    public ExhibitorAgesForm() {
        initComponents();
    }
    
    @Override
    public void createTheList() {
        theListModelData.clear();
        int idx;
        Breed breed;      
        for (idx=0;idx<exhibitorAgeList.list.size();idx++){
            ExhibitorAge exhibitorAge = (ExhibitorAge) exhibitorAgeList.get(idx);
            theListModelData.addElement(exhibitorAge.toListString(exhibitorAgeList.getFormatStr()));
        }
        displayTheList();
    }

    @Override
    public void displayTheList(){
        lstDisplay.updateUI();
    }    

    @Override
    public ExhibitorAge getFormData() {
        ExhibitorAge formData = new ExhibitorAge();
        formData.setId(Integer.valueOf(edtExhibitorAgeID.getText()));
        formData.setAge(Integer.valueOf(edtExhibitorAgeValue.getText()));
        formData.setAgeText(edtExhibitorAgeText.getText());
        formData.setAbbrev(edtExhibitorAgeAbbrev.getText());
        formData.newItem = false;
        return  formData;
    }

    @Override
    public void setFormData(BaseDataItem dataItem) {
        ExhibitorAge formData = (ExhibitorAge) dataItem;
        edtExhibitorAgeID.setText(Integer.toString(formData.getId()));
        edtExhibitorAgeValue.setText(Integer.toString(formData.getAge()));
        edtExhibitorAgeText.setText(formData.getAgeText());
        edtExhibitorAgeAbbrev.setText(formData.getAbbrev());
    }


    public void setButtons(){
       btnDelete.setText("Delete");
       btnUpdate.setText("Update");
       btnInsert.setText("New");
       btnUpdate.setEnabled(!edtExhibitorAgeID.getText().isEmpty());
       btnDelete.setEnabled(!edtExhibitorAgeID.getText().isEmpty());
       btnInsert.setEnabled(true);        
    }
    
    @Override
    public void setButtons(BaseDataItem dataRecord){
        btnDelete.setText(dataRecord.isReadyToDelete()?"Undelete":"Delete");
        btnUpdate.setText(dataRecord.isDirty()?" Undo ":"Update");
        btnInsert.setText(dataRecord.isNewItem()?"Add":"New");
        btnUpdate.setEnabled(!dataRecord.isReadyToDelete());
        //btnDelete.setEnabled(!dataRecord.isNewItem());
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblExhibitorAgeID = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        edtExhibitorAgeID = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblExhibitorAgeAbbrev = new javax.swing.JLabel();
        edtExhibitorAgeText = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        lblExhibitorAgeClass = new javax.swing.JLabel();
        edtHeaders = new javax.swing.JTextField();
        edtExhibitorAgeValue = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDisplay = new javax.swing.JList();
        lblExhibitorAgeText = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        edtExhibitorAgeAbbrev = new javax.swing.JTextField();
        btnClose = new javax.swing.JButton();
        btnAbandon = new javax.swing.JButton();

        lblExhibitorAgeID.setText("Exhibit Age ID");

        btnInsert.setText("Add");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        edtExhibitorAgeID.setText("0");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblExhibitorAgeAbbrev.setText("Exhibit Age Value");

        lblExhibitorAgeClass.setText("Exhibit Age Text for Classes");

        edtHeaders.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 12)); // NOI18N
        edtHeaders.setText("Header");

        edtExhibitorAgeValue.setText("0");

        lstDisplay.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 12)); // NOI18N
        lstDisplay.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstDisplayValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstDisplay);

        lblExhibitorAgeText.setText("Exhibit Age Text for Exhibit ");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClose.setText("Save and Close ");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnAbandon.setText("Abandon and Close");
        btnAbandon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbandonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(58, 58, 58)
                .add(btnDelete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(btnUpdate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(btnInsert, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(btnClose))
            .add(layout.createSequentialGroup()
                .add(42, 42, 42)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(lblExhibitorAgeID)
                    .add(lblExhibitorAgeText)
                    .add(lblExhibitorAgeClass)
                    .add(lblExhibitorAgeAbbrev))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(edtExhibitorAgeValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(edtExhibitorAgeText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 168, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(edtExhibitorAgeID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(edtExhibitorAgeAbbrev, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 168, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 159, Short.MAX_VALUE)
                        .add(btnAbandon))))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, lblStatus, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jScrollPane1)
            .add(edtHeaders)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(edtHeaders, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(7, 7, 7)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(lblStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(21, 21, 21)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblExhibitorAgeID)
                    .add(edtExhibitorAgeID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblExhibitorAgeAbbrev)
                    .add(edtExhibitorAgeValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(lblExhibitorAgeText)
                    .add(edtExhibitorAgeText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblExhibitorAgeClass)
                            .add(edtExhibitorAgeAbbrev, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                        .add(btnAbandon)
                        .add(29, 29, 29)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnInsert)
                    .add(btnDelete)
                    .add(btnUpdate)
                    .add(btnClose))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        newItem = ! newItem;
        if (newItem){
            lblStatus.setText("New Record - Add or Cancel");
            edtExhibitorAgeID.setText(Integer.toString(DBA.getNewKey("human_ages", "id")));
            edtExhibitorAgeAbbrev.setText("");
            edtExhibitorAgeText.setText("");
            edtExhibitorAgeValue.setText("");
            btnInsert.setText("Add");
        } else if (this.edtExhibitorAgeText.getText().isEmpty()  ||
                   this.edtExhibitorAgeAbbrev.getText().isEmpty() ||
                   this.edtExhibitorAgeValue.getText().isEmpty()){
            newItem = true;
            lblStatus.setText("New Record - Not added some data not specified");
        } else {
            lblStatus.setText("New Record - Added");
            ExhibitorAge dataRecord = (ExhibitorAge) getFormData();
            dataRecord.setNewItem(true);
            exhibitorAgeList.add((ExhibitorAge)dataRecord);
            theListModelData.addElement(dataRecord.toListString(exhibitorAgeList.getFormatStr()));
            setButtons(dataRecord);
            selectedRecord = exhibitorAgeList.list.size();
            curRecord = (ExhibitorAge) exhibitorAgeList.get(selectedRecord);
            lstDisplay.setSelectedIndex(selectedRecord);
            displayTheList();
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        ExhibitorAge dataRecord = (ExhibitorAge) getFormData();
        dataRecord.setDirty(false);
        dataRecord.setNewItem(false);
        dataRecord.setReadyToDelete(false);
        if (!dataRecord.equals(curRecord)){
            if (curRecord.isDirty()){
                dataRecord.performRead();
                curRecord.setDirty(false);
            } else {
                curRecord.setDirty(true);
                dataRecord.setDirty(true);
            }
            exhibitorAgeList.list.set(selectedRecord, dataRecord);
            theListModelData.set(selectedRecord, dataRecord.toListString(exhibitorAgeList.getFormatStr()));
        }
        setButtons(dataRecord);
        displayTheList();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void lstDisplayValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstDisplayValueChanged
        selectedRecord = lstDisplay.getSelectedIndex();
        setFormData((ExhibitorAge) exhibitorAgeList.get(selectedRecord));
        curRecord = (ExhibitorAge) exhibitorAgeList.get(selectedRecord);
    }//GEN-LAST:event_lstDisplayValueChanged

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //curRecord = getFormData();
        curRecord.setReadyToDelete(!curRecord.isReadyToDelete());
        //btnDelete.setText(curRecord.isReadyToDelete()?"Undelete":"Delete");
        exhibitorAgeList.list.set(selectedRecord, curRecord);
        theListModelData.set(selectedRecord, curRecord.toListString(exhibitorAgeList.getFormatStr()));
        setButtons(curRecord);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        exhibitorAgeList.writeList();
        this.setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAbandonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbandonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnAbandonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbandon;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField edtExhibitorAgeAbbrev;
    private javax.swing.JTextField edtExhibitorAgeID;
    private javax.swing.JTextField edtExhibitorAgeText;
    private javax.swing.JTextField edtExhibitorAgeValue;
    private javax.swing.JTextField edtHeaders;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblExhibitorAgeAbbrev;
    private javax.swing.JLabel lblExhibitorAgeClass;
    private javax.swing.JLabel lblExhibitorAgeID;
    private javax.swing.JLabel lblExhibitorAgeText;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JList lstDisplay;
    // End of variables declaration//GEN-END:variables


}
