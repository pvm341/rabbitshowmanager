/*
 * Copyright (C) 2014 paul
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package rsm;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author paul
 */
public final class BreedForm extends javax.swing.JFrame implements FormInterface {
    private BreedList breedList = new BreedList();
    private Breed curRecord;
    private int selectedRecord;
    private boolean newItem;
    private int[] intSections;
    private final DefaultListModel<String> theListModelData;
    private final DefaultComboBoxModel modelAges;
    private final DefaultComboBoxModel modelSections;

    public BreedForm() {
        breedList = new BreedList();
        String[] arrayAges = DBA.getStringArrayFromSQL("exhibit_ages", "age_text", "age = 3");
        String[] arraySections = DBA.getStringArrayFromSQL("showsections", "section_text", "section > 0 AND section <=8");
        intSections = DBA.getIntArrayFromSQL("showsections", "section", "section > 0 AND section <=8");
        modelAges = new DefaultComboBoxModel(arrayAges);
        modelSections = new DefaultComboBoxModel(arraySections);
        initComponents();
        cmxYoungster.setModel(modelAges);
        cmxSection.setModel(modelSections);
        theListModelData = new DefaultListModel();
        lstBreedDisplay.setModel(theListModelData);       
        breedList.readList(HeaderRequired.HEADERS);
        createTheList();
        edtBreedHeaders.setText(breedList.getHeader());
        setButtons();
        displayTheList();
        btnCancelTheAdd.setVisible(false);
        newItem = false;
    }
    
    
    /**
     * Creates the ListModelData 
     */
    @Override
    public void createTheList() {
        theListModelData.clear();
        int idx;
        Breed breed;      
        for (idx=0;idx<breedList.list.size();idx++){
            breed = (Breed) breedList.get(idx);
            theListModelData.addElement(breed.toListString(breedList.getFormatStr()));
        }
        displayTheList();
    }

    @Override
    public void displayTheList(){
        lstBreedDisplay.updateUI();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstBreedDisplay = new javax.swing.JList();
        edtBreedHeaders = new javax.swing.JTextField();
        lblBreedID = new javax.swing.JLabel();
        edtBreedID = new javax.swing.JTextField();
        lblYoungsters = new javax.swing.JLabel();
        cmxYoungster = new javax.swing.JComboBox();
        cbxTopPenReq = new javax.swing.JCheckBox();
        lblSections = new javax.swing.JLabel();
        cmxSection = new javax.swing.JComboBox();
        lblBreedName = new javax.swing.JLabel();
        edtBreedName = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnAbandon = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        btnCancelTheAdd = new javax.swing.JButton();

        setTitle("Breed Editor");
        setMaximumSize(null);
        setMinimumSize(null);
        setPreferredSize(new java.awt.Dimension(640, 480));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lstBreedDisplay.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 12)); // NOI18N
        lstBreedDisplay.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstBreedDisplayValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstBreedDisplay);

        edtBreedHeaders.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 12)); // NOI18N
        edtBreedHeaders.setText("Header");

        lblBreedID.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblBreedID.setText("Breed ID");
        lblBreedID.setMaximumSize(null);
        lblBreedID.setMinimumSize(null);

        edtBreedID.setEditable(false);
        edtBreedID.setBackground(new java.awt.Color(149, 204, 204));

        lblYoungsters.setText("  Youngsters");
        lblYoungsters.setMaximumSize(null);
        lblYoungsters.setMinimumSize(null);

        cbxTopPenReq.setText("Top Pen Req");
        cbxTopPenReq.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        lblSections.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSections.setText("Section");
        lblSections.setMaximumSize(null);
        lblSections.setMinimumSize(null);

        lblBreedName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblBreedName.setText("Name");
        lblBreedName.setMaximumSize(null);
        lblBreedName.setMinimumSize(null);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnInsert.setText("Add");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnAbandon.setText("Abandon and Close");
        btnAbandon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbandonActionPerformed(evt);
            }
        });

        btnClose.setText("Save and Close ");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnCancelTheAdd.setText("Cancel");
        btnCancelTheAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelTheAddActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(edtBreedHeaders)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(lblYoungsters, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(lblBreedID, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(4, 4, 4)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(edtBreedID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(529, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(cmxYoungster, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(btnAbandon))))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(lblBreedName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lblSections, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(4, 4, 4)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(edtBreedName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 207, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(cmxSection, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 192, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(btnClose))))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(btnDelete, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(btnUpdate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 78, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(btnInsert, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnCancelTheAdd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(15, 15, 15)
                                .add(lblStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 506, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(cbxTopPenReq))
                        .add(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(edtBreedHeaders, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(6, 6, 6)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lblStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(edtBreedID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblBreedID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cmxYoungster, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblYoungsters, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnAbandon))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cbxTopPenReq)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblSections, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cmxSection, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(btnClose)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblBreedName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(edtBreedName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnDelete)
                    .add(btnUpdate)
                    .add(btnInsert)
                    .add(btnCancelTheAdd)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int sectionToIndex(int key){
        int idx;
        
        for (idx =0; intSections[idx]!=key; idx++) /*void */;
        return idx;
    }
    
    private int indexToSection(int key){
        return intSections[key];
    }
    
    @Override
    public void setFormData(BaseDataItem dataRecord){
        Breed formRec = (Breed) dataRecord;
        edtBreedID.setText(Integer.toString(formRec.getId()));
        cmxYoungster.setSelectedIndex(formRec.getYoungsters()==3?0:1);
        cmxSection.setSelectedIndex(sectionToIndex(formRec.getSection()));
        edtBreedName.setText(formRec.getBreed());
        cbxTopPenReq.setSelected(formRec.isTopPenReq());
        btnDelete.setEnabled(true);
        btnInsert.setEnabled(true);
        btnUpdate.setEnabled(true);
        setButtons(formRec);
    }
    
    @Override
    public Breed getFormData(){
        Breed dataRecord = new Breed();
        if (edtBreedID.getText().isEmpty()){
            dataRecord.setId(DBA.getNewKey("breeds", "id"));
            dataRecord.setNewItem(true);
        } else {
            dataRecord.setNewItem(false);
            dataRecord.setId(Integer.parseInt(edtBreedID.getText()));        
        }
        dataRecord.setYoungsters(3+cmxYoungster.getSelectedIndex());
        dataRecord.setTopPenReq(cbxTopPenReq.isSelected());
        dataRecord.setSection(indexToSection(cmxSection.getSelectedIndex()));
        dataRecord.setBreed(edtBreedName.getText());
        setButtons(dataRecord);
        return dataRecord;
    }
    
   
    public void setButtons(){
       btnDelete.setText("Delete");
       btnUpdate.setText("Update");
       btnInsert.setText("New");
       btnUpdate.setEnabled(!edtBreedID.getText().isEmpty());
       btnDelete.setEnabled(!edtBreedID.getText().isEmpty());
       btnInsert.setEnabled(true);        
    }
    
    @Override
    public void setButtons(BaseDataItem dataRecord) {
        btnDelete.setText(dataRecord.isReadyToDelete()?"Undelete":"Delete");
        btnUpdate.setText(dataRecord.isDirty()?" Undo ":"Update");
        btnInsert.setText(dataRecord.isNewItem()?"Add":"New");
        btnUpdate.setEnabled(!dataRecord.isReadyToDelete());
        //btnDelete.setEnabled(!dataRecord.isNewItem());
   }
    
    private void lstBreedDisplayValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstBreedDisplayValueChanged
        selectedRecord = lstBreedDisplay.getSelectedIndex();
        setFormData((Breed) breedList.get(selectedRecord));
        curRecord = (Breed) breedList.get(selectedRecord);
    }//GEN-LAST:event_lstBreedDisplayValueChanged

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Breed dataRecord = getFormData();
        dataRecord.setDirty(false);
        dataRecord.setNewItem(false);
        dataRecord.setReadyToDelete(false);
        if (!dataRecord.equals(curRecord)){
            if (curRecord.isDirty()){
                dataRecord.readRecord(dataRecord.getId());
                curRecord.setDirty(false);
            } else {
                curRecord.setDirty(true);
                dataRecord.setDirty(true);
            }
            breedList.list.set(selectedRecord, dataRecord);
            theListModelData.set(selectedRecord, dataRecord.toListString(breedList.getFormatStr()));        
        }    
        setButtons(dataRecord);
        displayTheList();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //curRecord = getFormData();
        curRecord.setReadyToDelete(!curRecord.isReadyToDelete());
        //btnDelete.setText(curRecord.isReadyToDelete()?"Undelete":"Delete");
        breedList.list.set(selectedRecord, curRecord);
        theListModelData.set(selectedRecord, curRecord.toListString(breedList.getFormatStr()));
        setButtons(curRecord);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        displayTheList();      
    }//GEN-LAST:event_formWindowOpened

    private void btnAbandonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbandonActionPerformed
       this.setVisible(false);
    }//GEN-LAST:event_btnAbandonActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        breedList.writeList();
        this.setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        newItem = ! newItem;
        btnCancelTheAdd.setVisible(newItem);
        btnInsert.setText("Add");
        if (newItem){
            lblStatus.setText("New Record - Add or Cancel");
            edtBreedName.setText("");
            cmxYoungster.setSelectedIndex(1);
            cmxSection.setSelectedIndex(0);   
            edtBreedID.setText(Integer.toString(breedList.list.size()+1));
        } else if (edtBreedName.getText().isEmpty()){
            newItem = true;
            lblStatus.setText("New Record - Not added as Breed Name not specified");
            btnCancelTheAdd.setVisible(newItem);
        } else {
            lblStatus.setText("New Record - Added");
            btnInsert.setText("New");
            Breed dataRecord = getFormData();
            dataRecord.setNewItem(true);
            breedList.add(dataRecord);
            theListModelData.addElement(dataRecord.toListString(breedList.getFormatStr()));
            setButtons(dataRecord);
            selectedRecord = breedList.list.size();
            curRecord = (Breed) breedList.get(selectedRecord);
            lstBreedDisplay.setSelectedIndex(selectedRecord);
            displayTheList();
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnCancelTheAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelTheAddActionPerformed
        // should only get if the cancel button clicked on 
        lblStatus.setText("New Record - Addition canelled");
        btnInsert.setText("New");
        btnCancelTheAdd.setVisible(false);
    }//GEN-LAST:event_btnCancelTheAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbandon;
    private javax.swing.JButton btnCancelTheAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox cbxTopPenReq;
    private javax.swing.JComboBox cmxSection;
    private javax.swing.JComboBox cmxYoungster;
    private javax.swing.JTextField edtBreedHeaders;
    private javax.swing.JTextField edtBreedID;
    private javax.swing.JTextField edtBreedName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBreedID;
    private javax.swing.JLabel lblBreedName;
    private javax.swing.JLabel lblSections;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblYoungsters;
    private javax.swing.JList lstBreedDisplay;
    // End of variables declaration//GEN-END:variables

}
